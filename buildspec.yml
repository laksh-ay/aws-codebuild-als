version: 0.2

phases:
  install:
    commands:
      - apt-get update -y
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - apt-get update -y
      - apt-get install -y yarn
      - echo for installing serverless
      - cd server
      - yarn global add serverless
      - yarn install
      - echo for local serverless developement
      # - cd ../client
      # - yarn install

  build:
    commands:
      # - cd ../server
      # - info=$(sls deploy)
      # - echo $info
      # - echo Build complete of server
      # - URL=$(echo $info | grep -oP "(https:\/\/)[a-zA-Z0-9]+\.[a-z]+\-[a-z]+\.[a-z]{2}\-[a-z]+\-[0-9]{1}\.[a-z]+\.[a-z]{3}\/[a-z]+$")
      # - echo $URL
      # - cd ../client
      # - REACT_APP_BACKEND_URL=$URL yarn run build
      # - echo Build complete of client
      - set -a arr
      - arr=(stage prod qa)
      - for i in ${arr[*]}
      - do
      - sls deploy
      - version=$(aws lambda list-versions-by-function --function-name express-api-dev-app --no-paginate --query "max_by(Versions, &to_number(to_number(Version) || '0'))" | grep -i "Version")
      - string=$(echo $version | awk 'NR==1{print $2}')
      - number=$(echo $string | grep -oP "\d")
      - echo $number
      - aws lambda create-alias --name $i --function-name express-api-dev-app --function-version $number
      - done
      - echo deployed

cache:
  paths:
    # - 'client/node_modules/**/*'
    # - 'server/node_modules/**/*'

artifacts:
  files:
    - '**/*'
  discard-paths: no
  base-directory: server
  # base-directory: client/build

role: arn:aws:iam::730627384046:role/service-role/codebuild-lambda-build-service-role
